/**
 * API title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AchievementEntity from './AchievementEntity';

/**
 * The AwardTypeEntity model module.
 * @module model/AwardTypeEntity
 * @version 0.0.1
 */
class AwardTypeEntity {
    /**
     * Constructs a new <code>AwardTypeEntity</code>.
     * AwardTypeEntity model
     * @alias module:model/AwardTypeEntity
     */
    constructor() { 
        
        AwardTypeEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AwardTypeEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AwardTypeEntity} obj Optional instance to populate.
     * @return {module:model/AwardTypeEntity} The populated <code>AwardTypeEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AwardTypeEntity();

            if (data.hasOwnProperty('award_type_id')) {
                obj['award_type_id'] = ApiClient.convertToType(data['award_type_id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('active_achievements')) {
                obj['active_achievements'] = ApiClient.convertToType(data['active_achievements'], [AchievementEntity]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AwardTypeEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AwardTypeEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['active_achievements']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['active_achievements'])) {
                throw new Error("Expected the field `active_achievements` to be an array in the JSON data but got " + data['active_achievements']);
            }
            // validate the optional field `active_achievements` (array)
            for (const item of data['active_achievements']) {
                AchievementEntity.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * ID of the Award Type Record
 * @member {Number} award_type_id
 */
AwardTypeEntity.prototype['award_type_id'] = undefined;

/**
 * Name of the Award Type
 * @member {String} name
 */
AwardTypeEntity.prototype['name'] = undefined;

/**
 * Array of Achievements for this award type
 * @member {Array.<module:model/AchievementEntity>} active_achievements
 */
AwardTypeEntity.prototype['active_achievements'] = undefined;






export default AwardTypeEntity;

