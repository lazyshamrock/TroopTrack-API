/**
 * API title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostV1UserAchievementsIdAchievement from './PostV1UserAchievementsIdAchievement';

/**
 * The PostV1UserAchievementsId model module.
 * @module model/PostV1UserAchievementsId
 * @version 0.0.1
 */
class PostV1UserAchievementsId {
    /**
     * Constructs a new <code>PostV1UserAchievementsId</code>.
     * Update achievment details, including requirements, for a given achievement
     * @alias module:model/PostV1UserAchievementsId
     * @param awardTypeId {Number} Id of the Award Type for the achievement being updated
     */
    constructor(awardTypeId) { 
        
        PostV1UserAchievementsId.initialize(this, awardTypeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, awardTypeId) { 
        obj['award_type_id'] = awardTypeId;
    }

    /**
     * Constructs a <code>PostV1UserAchievementsId</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostV1UserAchievementsId} obj Optional instance to populate.
     * @return {module:model/PostV1UserAchievementsId} The populated <code>PostV1UserAchievementsId</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostV1UserAchievementsId();

            if (data.hasOwnProperty('award_type_id')) {
                obj['award_type_id'] = ApiClient.convertToType(data['award_type_id'], 'Number');
            }
            if (data.hasOwnProperty('achievement')) {
                obj['achievement'] = PostV1UserAchievementsIdAchievement.constructFromObject(data['achievement']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostV1UserAchievementsId</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostV1UserAchievementsId</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostV1UserAchievementsId.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `achievement`
        if (data['achievement']) { // data not null
          PostV1UserAchievementsIdAchievement.validateJSON(data['achievement']);
        }

        return true;
    }


}

PostV1UserAchievementsId.RequiredProperties = ["award_type_id"];

/**
 * Id of the Award Type for the achievement being updated
 * @member {Number} award_type_id
 */
PostV1UserAchievementsId.prototype['award_type_id'] = undefined;

/**
 * @member {module:model/PostV1UserAchievementsIdAchievement} achievement
 */
PostV1UserAchievementsId.prototype['achievement'] = undefined;






export default PostV1UserAchievementsId;

