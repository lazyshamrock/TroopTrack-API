/**
 * API title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostV1EventsEvent model module.
 * @module model/PostV1EventsEvent
 * @version 0.0.1
 */
class PostV1EventsEvent {
    /**
     * Constructs a new <code>PostV1EventsEvent</code>.
     * @alias module:model/PostV1EventsEvent
     * @param title {String} 
     * @param eventTypeId {String} ID of an event type returned by the events/available_types API
     * @param startAt {String} Format: YYYY-MM-DDTHH:MM-0600 i.e. 2015-07-04T13:00-0600
     * @param description {String} 
     */
    constructor(title, eventTypeId, startAt, description) { 
        
        PostV1EventsEvent.initialize(this, title, eventTypeId, startAt, description);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, title, eventTypeId, startAt, description) { 
        obj['title'] = title;
        obj['event_type_id'] = eventTypeId;
        obj['start_at'] = startAt;
        obj['description'] = description;
    }

    /**
     * Constructs a <code>PostV1EventsEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostV1EventsEvent} obj Optional instance to populate.
     * @return {module:model/PostV1EventsEvent} The populated <code>PostV1EventsEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostV1EventsEvent();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('event_type_id')) {
                obj['event_type_id'] = ApiClient.convertToType(data['event_type_id'], 'String');
            }
            if (data.hasOwnProperty('start_at')) {
                obj['start_at'] = ApiClient.convertToType(data['start_at'], 'String');
            }
            if (data.hasOwnProperty('end_at')) {
                obj['end_at'] = ApiClient.convertToType(data['end_at'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('inviteable_tokens')) {
                obj['inviteable_tokens'] = ApiClient.convertToType(data['inviteable_tokens'], 'String');
            }
            if (data.hasOwnProperty('camping_nights')) {
                obj['camping_nights'] = ApiClient.convertToType(data['camping_nights'], 'String');
            }
            if (data.hasOwnProperty('hiking_miles')) {
                obj['hiking_miles'] = ApiClient.convertToType(data['hiking_miles'], 'String');
            }
            if (data.hasOwnProperty('canoeing_miles')) {
                obj['canoeing_miles'] = ApiClient.convertToType(data['canoeing_miles'], 'String');
            }
            if (data.hasOwnProperty('dues')) {
                obj['dues'] = ApiClient.convertToType(data['dues'], 'String');
            }
            if (data.hasOwnProperty('adult_fee')) {
                obj['adult_fee'] = ApiClient.convertToType(data['adult_fee'], 'String');
            }
            if (data.hasOwnProperty('rsvp_deadline')) {
                obj['rsvp_deadline'] = ApiClient.convertToType(data['rsvp_deadline'], 'String');
            }
            if (data.hasOwnProperty('send_invites_when')) {
                obj['send_invites_when'] = ApiClient.convertToType(data['send_invites_when'], 'String');
            }
            if (data.hasOwnProperty('send_reminder_when')) {
                obj['send_reminder_when'] = ApiClient.convertToType(data['send_reminder_when'], 'String');
            }
            if (data.hasOwnProperty('service_hours')) {
                obj['service_hours'] = ApiClient.convertToType(data['service_hours'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostV1EventsEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostV1EventsEvent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostV1EventsEvent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['event_type_id'] && !(typeof data['event_type_id'] === 'string' || data['event_type_id'] instanceof String)) {
            throw new Error("Expected the field `event_type_id` to be a primitive type in the JSON string but got " + data['event_type_id']);
        }
        // ensure the json data is a string
        if (data['start_at'] && !(typeof data['start_at'] === 'string' || data['start_at'] instanceof String)) {
            throw new Error("Expected the field `start_at` to be a primitive type in the JSON string but got " + data['start_at']);
        }
        // ensure the json data is a string
        if (data['end_at'] && !(typeof data['end_at'] === 'string' || data['end_at'] instanceof String)) {
            throw new Error("Expected the field `end_at` to be a primitive type in the JSON string but got " + data['end_at']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['inviteable_tokens'] && !(typeof data['inviteable_tokens'] === 'string' || data['inviteable_tokens'] instanceof String)) {
            throw new Error("Expected the field `inviteable_tokens` to be a primitive type in the JSON string but got " + data['inviteable_tokens']);
        }
        // ensure the json data is a string
        if (data['camping_nights'] && !(typeof data['camping_nights'] === 'string' || data['camping_nights'] instanceof String)) {
            throw new Error("Expected the field `camping_nights` to be a primitive type in the JSON string but got " + data['camping_nights']);
        }
        // ensure the json data is a string
        if (data['hiking_miles'] && !(typeof data['hiking_miles'] === 'string' || data['hiking_miles'] instanceof String)) {
            throw new Error("Expected the field `hiking_miles` to be a primitive type in the JSON string but got " + data['hiking_miles']);
        }
        // ensure the json data is a string
        if (data['canoeing_miles'] && !(typeof data['canoeing_miles'] === 'string' || data['canoeing_miles'] instanceof String)) {
            throw new Error("Expected the field `canoeing_miles` to be a primitive type in the JSON string but got " + data['canoeing_miles']);
        }
        // ensure the json data is a string
        if (data['dues'] && !(typeof data['dues'] === 'string' || data['dues'] instanceof String)) {
            throw new Error("Expected the field `dues` to be a primitive type in the JSON string but got " + data['dues']);
        }
        // ensure the json data is a string
        if (data['adult_fee'] && !(typeof data['adult_fee'] === 'string' || data['adult_fee'] instanceof String)) {
            throw new Error("Expected the field `adult_fee` to be a primitive type in the JSON string but got " + data['adult_fee']);
        }
        // ensure the json data is a string
        if (data['rsvp_deadline'] && !(typeof data['rsvp_deadline'] === 'string' || data['rsvp_deadline'] instanceof String)) {
            throw new Error("Expected the field `rsvp_deadline` to be a primitive type in the JSON string but got " + data['rsvp_deadline']);
        }
        // ensure the json data is a string
        if (data['send_invites_when'] && !(typeof data['send_invites_when'] === 'string' || data['send_invites_when'] instanceof String)) {
            throw new Error("Expected the field `send_invites_when` to be a primitive type in the JSON string but got " + data['send_invites_when']);
        }
        // ensure the json data is a string
        if (data['send_reminder_when'] && !(typeof data['send_reminder_when'] === 'string' || data['send_reminder_when'] instanceof String)) {
            throw new Error("Expected the field `send_reminder_when` to be a primitive type in the JSON string but got " + data['send_reminder_when']);
        }
        // ensure the json data is a string
        if (data['service_hours'] && !(typeof data['service_hours'] === 'string' || data['service_hours'] instanceof String)) {
            throw new Error("Expected the field `service_hours` to be a primitive type in the JSON string but got " + data['service_hours']);
        }

        return true;
    }


}

PostV1EventsEvent.RequiredProperties = ["title", "event_type_id", "start_at", "description"];

/**
 * @member {String} title
 */
PostV1EventsEvent.prototype['title'] = undefined;

/**
 * ID of an event type returned by the events/available_types API
 * @member {String} event_type_id
 */
PostV1EventsEvent.prototype['event_type_id'] = undefined;

/**
 * Format: YYYY-MM-DDTHH:MM-0600 i.e. 2015-07-04T13:00-0600
 * @member {String} start_at
 */
PostV1EventsEvent.prototype['start_at'] = undefined;

/**
 * Format: YYYY-MM-DDTHH:MM-0600 i.e. 2015-07-04T13:00-0600
 * @member {String} end_at
 */
PostV1EventsEvent.prototype['end_at'] = undefined;

/**
 * @member {String} location
 */
PostV1EventsEvent.prototype['location'] = undefined;

/**
 * @member {String} description
 */
PostV1EventsEvent.prototype['description'] = undefined;

/**
 * An array of strings describing who to invite. Each token must include the class and ID of the Troop, Patrol, or User to invite.               For example, to invite the whole troop, you would provide ['Troop-1211'], or to invite patrol 11911 and user 1223 and user 3344 then you would               provide ['Patrol-11911', 'User-1223', 'User-3344']
 * @member {String} inviteable_tokens
 */
PostV1EventsEvent.prototype['inviteable_tokens'] = undefined;

/**
 * How many nights do you expect to camp?
 * @member {String} camping_nights
 */
PostV1EventsEvent.prototype['camping_nights'] = undefined;

/**
 * Expected number of miles to be hiked
 * @member {String} hiking_miles
 */
PostV1EventsEvent.prototype['hiking_miles'] = undefined;

/**
 * Expected number of miles to be traveled by canoe
 * @member {String} canoeing_miles
 */
PostV1EventsEvent.prototype['canoeing_miles'] = undefined;

/**
 * Fee for youth to attend
 * @member {String} dues
 */
PostV1EventsEvent.prototype['dues'] = undefined;

/**
 * Fee for adults to attend
 * @member {String} adult_fee
 */
PostV1EventsEvent.prototype['adult_fee'] = undefined;

/**
 * @member {String} rsvp_deadline
 */
PostV1EventsEvent.prototype['rsvp_deadline'] = undefined;

/**
 * Number of days before the event to send an invitation. Use 999 to indicate sending the invite immediately.
 * @member {String} send_invites_when
 */
PostV1EventsEvent.prototype['send_invites_when'] = undefined;

/**
 * Number of days before the event to send a reminder.
 * @member {String} send_reminder_when
 */
PostV1EventsEvent.prototype['send_reminder_when'] = undefined;

/**
 * Number of service hours expected to be completed
 * @member {String} service_hours
 */
PostV1EventsEvent.prototype['service_hours'] = undefined;






export default PostV1EventsEvent;

