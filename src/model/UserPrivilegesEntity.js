/**
 * API title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserPrivilegesEntity model module.
 * @module model/UserPrivilegesEntity
 * @version 0.0.1
 */
class UserPrivilegesEntity {
    /**
     * Constructs a new <code>UserPrivilegesEntity</code>.
     * UserPrivilegesEntity model
     * @alias module:model/UserPrivilegesEntity
     */
    constructor() { 
        
        UserPrivilegesEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserPrivilegesEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserPrivilegesEntity} obj Optional instance to populate.
     * @return {module:model/UserPrivilegesEntity} The populated <code>UserPrivilegesEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserPrivilegesEntity();

            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('troop')) {
                obj['troop'] = ApiClient.convertToType(data['troop'], 'String');
            }
            if (data.hasOwnProperty('troop_id')) {
                obj['troop_id'] = ApiClient.convertToType(data['troop_id'], 'Number');
            }
            if (data.hasOwnProperty('cache_scope')) {
                obj['cache_scope'] = ApiClient.convertToType(data['cache_scope'], 'String');
            }
            if (data.hasOwnProperty('troop_number')) {
                obj['troop_number'] = ApiClient.convertToType(data['troop_number'], 'String');
            }
            if (data.hasOwnProperty('troop_type')) {
                obj['troop_type'] = ApiClient.convertToType(data['troop_type'], 'String');
            }
            if (data.hasOwnProperty('troop_type_id')) {
                obj['troop_type_id'] = ApiClient.convertToType(data['troop_type_id'], 'Number');
            }
            if (data.hasOwnProperty('privileges')) {
                obj['privileges'] = ApiClient.convertToType(data['privileges'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserPrivilegesEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserPrivilegesEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['troop'] && !(typeof data['troop'] === 'string' || data['troop'] instanceof String)) {
            throw new Error("Expected the field `troop` to be a primitive type in the JSON string but got " + data['troop']);
        }
        // ensure the json data is a string
        if (data['cache_scope'] && !(typeof data['cache_scope'] === 'string' || data['cache_scope'] instanceof String)) {
            throw new Error("Expected the field `cache_scope` to be a primitive type in the JSON string but got " + data['cache_scope']);
        }
        // ensure the json data is a string
        if (data['troop_number'] && !(typeof data['troop_number'] === 'string' || data['troop_number'] instanceof String)) {
            throw new Error("Expected the field `troop_number` to be a primitive type in the JSON string but got " + data['troop_number']);
        }
        // ensure the json data is a string
        if (data['troop_type'] && !(typeof data['troop_type'] === 'string' || data['troop_type'] instanceof String)) {
            throw new Error("Expected the field `troop_type` to be a primitive type in the JSON string but got " + data['troop_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['privileges'])) {
            throw new Error("Expected the field `privileges` to be an array in the JSON data but got " + data['privileges']);
        }

        return true;
    }


}



/**
 * API authentication token for this user
 * @member {String} token
 */
UserPrivilegesEntity.prototype['token'] = undefined;

/**
 * ID of the user record
 * @member {Number} user_id
 */
UserPrivilegesEntity.prototype['user_id'] = undefined;

/**
 * Full number or name identifying the unit this user belongs to.
 * @member {String} troop
 */
UserPrivilegesEntity.prototype['troop'] = undefined;

/**
 * ID of the unit this user belongs to
 * @member {Number} troop_id
 */
UserPrivilegesEntity.prototype['troop_id'] = undefined;

/**
 * This value is used to identify the contents of the offline cache that apply to this user.
 * @member {String} cache_scope
 */
UserPrivilegesEntity.prototype['cache_scope'] = undefined;

/**
 * Number of the unit this user belongs to.
 * @member {String} troop_number
 */
UserPrivilegesEntity.prototype['troop_number'] = undefined;

/**
 * Description of the type of unit this user belongs to.
 * @member {String} troop_type
 */
UserPrivilegesEntity.prototype['troop_type'] = undefined;

/**
 * ID of the unit type record
 * @member {Number} troop_type_id
 */
UserPrivilegesEntity.prototype['troop_type_id'] = undefined;

/**
 * Names of privileges this user has.
 * @member {Array.<String>} privileges
 */
UserPrivilegesEntity.prototype['privileges'] = undefined;






export default UserPrivilegesEntity;

