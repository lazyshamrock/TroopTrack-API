/**
 * API title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TroopPhotoEntity from './TroopPhotoEntity';

/**
 * The PhotoAlbumEntity model module.
 * @module model/PhotoAlbumEntity
 * @version 0.0.1
 */
class PhotoAlbumEntity {
    /**
     * Constructs a new <code>PhotoAlbumEntity</code>.
     * PhotoAlbumEntity model
     * @alias module:model/PhotoAlbumEntity
     */
    constructor() { 
        
        PhotoAlbumEntity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PhotoAlbumEntity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PhotoAlbumEntity} obj Optional instance to populate.
     * @return {module:model/PhotoAlbumEntity} The populated <code>PhotoAlbumEntity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PhotoAlbumEntity();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('photo_album_id')) {
                obj['photo_album_id'] = ApiClient.convertToType(data['photo_album_id'], 'Number');
            }
            if (data.hasOwnProperty('photo_count')) {
                obj['photo_count'] = ApiClient.convertToType(data['photo_count'], 'Number');
            }
            if (data.hasOwnProperty('taken_on')) {
                obj['taken_on'] = ApiClient.convertToType(data['taken_on'], 'String');
            }
            if (data.hasOwnProperty('troop_photos')) {
                obj['troop_photos'] = ApiClient.convertToType(data['troop_photos'], [TroopPhotoEntity]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PhotoAlbumEntity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PhotoAlbumEntity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['taken_on'] && !(typeof data['taken_on'] === 'string' || data['taken_on'] instanceof String)) {
            throw new Error("Expected the field `taken_on` to be a primitive type in the JSON string but got " + data['taken_on']);
        }
        if (data['troop_photos']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['troop_photos'])) {
                throw new Error("Expected the field `troop_photos` to be an array in the JSON data but got " + data['troop_photos']);
            }
            // validate the optional field `troop_photos` (array)
            for (const item of data['troop_photos']) {
                TroopPhotoEntity.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Name used to identify the photo album
 * @member {String} name
 */
PhotoAlbumEntity.prototype['name'] = undefined;

/**
 * ID of the photo album record
 * @member {Number} photo_album_id
 */
PhotoAlbumEntity.prototype['photo_album_id'] = undefined;

/**
 * Number of photos in this album
 * @member {Number} photo_count
 */
PhotoAlbumEntity.prototype['photo_count'] = undefined;

/**
 * Date the album was taken on as specified by the user
 * @member {String} taken_on
 */
PhotoAlbumEntity.prototype['taken_on'] = undefined;

/**
 * An array of troop photos
 * @member {Array.<module:model/TroopPhotoEntity>} troop_photos
 */
PhotoAlbumEntity.prototype['troop_photos'] = undefined;






export default PhotoAlbumEntity;

