/**
 * API title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiTitle);
  }
}(this, function(expect, ApiTitle) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiTitle.PostV1EventsEvent();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PostV1EventsEvent', function() {
    it('should create an instance of PostV1EventsEvent', function() {
      // uncomment below and update the code to test PostV1EventsEvent
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be.a(ApiTitle.PostV1EventsEvent);
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property eventTypeId (base name: "event_type_id")', function() {
      // uncomment below and update the code to test the property eventTypeId
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property startAt (base name: "start_at")', function() {
      // uncomment below and update the code to test the property startAt
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property endAt (base name: "end_at")', function() {
      // uncomment below and update the code to test the property endAt
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property inviteableTokens (base name: "inviteable_tokens")', function() {
      // uncomment below and update the code to test the property inviteableTokens
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property campingNights (base name: "camping_nights")', function() {
      // uncomment below and update the code to test the property campingNights
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property hikingMiles (base name: "hiking_miles")', function() {
      // uncomment below and update the code to test the property hikingMiles
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property canoeingMiles (base name: "canoeing_miles")', function() {
      // uncomment below and update the code to test the property canoeingMiles
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property dues (base name: "dues")', function() {
      // uncomment below and update the code to test the property dues
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property adultFee (base name: "adult_fee")', function() {
      // uncomment below and update the code to test the property adultFee
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property rsvpDeadline (base name: "rsvp_deadline")', function() {
      // uncomment below and update the code to test the property rsvpDeadline
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property sendInvitesWhen (base name: "send_invites_when")', function() {
      // uncomment below and update the code to test the property sendInvitesWhen
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property sendReminderWhen (base name: "send_reminder_when")', function() {
      // uncomment below and update the code to test the property sendReminderWhen
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

    it('should have the property serviceHours (base name: "service_hours")', function() {
      // uncomment below and update the code to test the property serviceHours
      //var instance = new ApiTitle.PostV1EventsEvent();
      //expect(instance).to.be();
    });

  });

}));
